{"version":3,"sources":["history.js","resources/clear.svg","helpers.js","components/AutoComplete.js","components/LocationInfo.js","components/Home.js","components/Header.js","components/Favorites.js","components/App.js","index.js"],"names":["createBrowserHistory","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","_ref","svgRef","title","props","width","height","viewBox","ref","undefined","x1","y1","x2","y2","style","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","ForwardRef","forwardRef","renderFavoritesButton","location","isFavorited","setIsFavorited","console","log","onClick","favorites","JSON","parse","localStorage","getItem","filter","locationDetails","setItem","stringify","removeFromFavorites","push","addToFavorites","renderFavorites","setFavorites","map","favorite","className","locationKey","locationName","forecasts","dailyForecasts","Temperature","Maximum","Value","name","removeFromFavoritesPage","fetchSearchSuggestions","query","setSuggestions","a","axios","get","response","data","fetchForecasts","Key","res","headline","Headline","DailyForecasts","LocalizedName","AutoComplete","handleSetSelection","useState","userInput","setUserInput","suggestions","type","placeholder","value","onChange","e","handleSearchInput","setInputValue","renderClearSearch","suggestion","renderSearchSuggestions","LocationInfo","savedFavorites","useEffect","Day","IconPhrase","forecast","Date","moment","format","Home","initialLocation","setLocationDetails","setForecasts","then","catch","EnglishName","localizedName","useInitialForecast","setLocation","selection","locationObject","Header","to","Favorites","App","history","path","exact","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.463a4040.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory()","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"Clear Query\");\n\nvar SvgClear = function SvgClear(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 512,\n    height: 512,\n    viewBox: \"0 0 512 512\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"line\", {\n    x1: 368,\n    y1: 368,\n    x2: 144,\n    y2: 144,\n    style: {\n      fill: \"none\",\n      stroke: \"#bbb\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      strokeWidth: 32\n    }\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: 368,\n    y1: 144,\n    x2: 144,\n    y2: 368,\n    style: {\n      fill: \"none\",\n      stroke: \"#bbb\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      strokeWidth: 32\n    }\n  }));\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgClear, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/clear.226bf20b.svg\";\nexport { ForwardRef as ReactComponent };","import moment from 'moment'\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { ReactComponent as ClearQuerySVG } from './resources/clear.svg'\r\n\r\nexport const renderForecast = (forecasts) => {\r\n    return forecasts.map(forecast => {\r\n        return (\r\n            <div className=\"favorite\" key={forecast.Date}>\r\n                <span>{moment(forecast.Date).format('dddd, D/M')}</span>\r\n                <span>{forecast.Temperature.Maximum.Value}°</span>\r\n                <span>{forecast.Day.IconPhrase}</span>\r\n            </div>\r\n        )\r\n    })\r\n}\r\n\r\nexport const removeFromFavorites = (key) => {\r\n    const favorites = JSON.parse(localStorage.getItem('favorites'))\r\n        .filter(location => location.locationDetails.key !== key)\r\n\r\n    localStorage.setItem('favorites', JSON.stringify(favorites))\r\n}\r\n\r\nexport const addToFavorites = (location) => {\r\n    if (!localStorage.getItem('favorites')) {\r\n        localStorage.setItem('favorites', JSON.stringify([location]))\r\n    } else {\r\n        const favorites = JSON.parse(localStorage.getItem('favorites'))\r\n        favorites.push(location)\r\n\r\n        localStorage.setItem('favorites', JSON.stringify(favorites))\r\n    }\r\n}\r\n\r\nexport const renderFavoritesButton = (location, isFavorited, setIsFavorited) => {\r\n    console.log(isFavorited)\r\n    if (isFavorited) {\r\n        return <button onClick={() => {\r\n            removeFromFavorites(location.locationDetails.key)\r\n            setIsFavorited(false)\r\n        }}>Remove from favorites</button>\r\n    }\r\n    return <button onClick={() => {\r\n        addToFavorites(location)\r\n        setIsFavorited(true)\r\n    }}>Add to favorites</button>\r\n\r\n}\r\n\r\nexport const removeFromFavoritesPage = (name, setFavorites) => {\r\n    const favorites = JSON.parse(localStorage.getItem('favorites'))\r\n        .filter(favorite => favorite.locationDetails.locationName !== name)\r\n    localStorage.setItem('favorites', JSON.stringify(favorites))\r\n    setFavorites(favorites)\r\n}\r\n\r\nexport const renderFavorites = (favorites, setFavorites) => {\r\n    return favorites.map(favorite => {\r\n        return (\r\n            <div className=\"favorite\" key={favorite.locationDetails.locationKey}>\r\n                <div>\r\n                    {favorite.locationDetails.locationName}\r\n                </div>\r\n                {favorite.forecasts.dailyForecasts[0].Temperature.Maximum.Value}°\r\n                    <button onClick={() => removeFromFavoritesPage(favorite.locationDetails.locationName, setFavorites)}>\r\n                    Remove\r\n                    </button>\r\n            </div>\r\n        )\r\n    })\r\n}\r\n\r\nexport const renderClearSearch = (query, setInputValue, setSuggestions) => {\r\n    if (query) {\r\n        return (\r\n            <ClearQuerySVG className=\"clear-search\" onClick={() => {\r\n                setInputValue('')\r\n                setSuggestions([])\r\n            }} />\r\n        )\r\n    }\r\n}\r\n\r\nexport const fetchSearchSuggestions = async (query, setSuggestions) => {\r\n    try {\r\n        const response = await axios.get('http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=P325o4iUPsOKEA6GV2byFNsBRqEWh25I&q=' + query)\r\n        setSuggestions(response.data)\r\n    } catch (e) {\r\n        console.log('Network error. Please check your connection and try again.')\r\n    }\r\n}\r\n\r\nexport const handleSearchInput = (e, setSuggestions, setUserInput) => {\r\n    const userInput = e.target.value\r\n\r\n    setUserInput(userInput)\r\n\r\n    if (userInput.length < 2) {\r\n        setSuggestions([])\r\n    } else {\r\n        fetchSearchSuggestions(userInput, setSuggestions)\r\n    }\r\n}\r\n\r\nexport const renderSearchSuggestions = (suggestions, setSuggestions, setUserInput, handleSetSelection) => {\r\n    if (!suggestions.length) return null\r\n    return (\r\n        <ul>\r\n            {suggestions.map(suggestion => {\r\n                return (\r\n                    <li\r\n                        key={suggestion.Key}\r\n                        onClick={() => {\r\n                            setUserInput(suggestion.LocalizedName)\r\n                            setSuggestions([])\r\n                            handleSetSelection(suggestion)\r\n                            console.log('suggestions')\r\n                            console.log(suggestion)\r\n                        }}>\r\n                        {suggestion.LocalizedName}\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport const useInitialForecast = () => {\r\n    const locationCode = '215854'\r\n    const [locationDetails, setLocationDetails] = useState({})\r\n    const [forecasts, setForecasts] = useState({})\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${locationCode}?apikey=XmwZ0Xg7fBum5BgGI09qAA9EmvG7D755&metric=true`)\r\n            .then(res => {\r\n                const headline = res.data.Headline\r\n                const dailyForecasts = res.data.DailyForecasts\r\n                setForecasts({ headline, dailyForecasts })\r\n            }).catch(e => console.log(e))\r\n        axios.get(`http://dataservice.accuweather.com/locations/v1/${locationCode}?apikey=XmwZ0Xg7fBum5BgGI09qAA9EmvG7D755&metric=true`).\r\n            then(res => {\r\n                const locationName = res.data.EnglishName\r\n                const localizedName = res.data.LocalizedName\r\n                const locationKey = res.data.Key\r\n                setLocationDetails({ locationName, localizedName, locationKey })\r\n            }).catch(e => console.log(e))\r\n    }, [])\r\n\r\n    return { locationDetails, forecasts }\r\n}\r\n\r\nexport const fetchForecasts = async (location) => {\r\n    const forecasts = {}\r\n    const locationDetails = {}\r\n    try {\r\n        const res = await axios.get(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${location.Key}?apikey=XmwZ0Xg7fBum5BgGI09qAA9EmvG7D755&metric=true`)\r\n        forecasts.headline = res.data.Headline\r\n        forecasts.dailyForecasts = res.data.DailyForecasts\r\n        locationDetails.locationName = location.LocalizedName\r\n        locationDetails.locationKey = location.Key\r\n        console.log('fetchForecasts')\r\n        console.log({ forecasts, locationDetails })\r\n        return { forecasts, locationDetails }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { handleSearchInput, renderSearchSuggestions, renderClearSearch } from '../helpers'\r\n\r\n\r\nconst AutoComplete = ({ handleSetSelection }) => {\r\n    const [userInput, setUserInput] = useState('')\r\n    const [suggestions, setSuggestions] = useState([])\r\n\r\n    return(\r\n        <div className=\"auto-complete\">\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Enter a location to search for\"\r\n                value={userInput} \r\n                onChange={(e) => handleSearchInput(e, setSuggestions, setUserInput)}\r\n            />\r\n            {renderClearSearch(userInput, setUserInput, setSuggestions)}\r\n            {renderSearchSuggestions(suggestions, setSuggestions, setUserInput, handleSetSelection)}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AutoComplete","import React, { useState, useEffect} from 'react'\r\nimport { renderForecast, renderFavoritesButton } from '../helpers'\r\n\r\nconst LocationInfo = ({ location }) => {\r\n    const savedFavorites = JSON.parse(localStorage.getItem('favorites'))\r\n    const [isFavorited, setIsFavorited] = useState(null)\r\n    \r\n    useEffect(() => {\r\n        if (savedFavorites && savedFavorites.length) {\r\n            console.log(savedFavorites)\r\n            console.log(location.locationDetails.locationKey)\r\n                for (let i = 0; i < savedFavorites.length; i++) {\r\n                    if (savedFavorites[i].locationDetails.locationKey === location.locationDetails.locationKey) {\r\n                        setIsFavorited(true)\r\n                    } else {\r\n                        setIsFavorited(null)\r\n                    }\r\n                }\r\n            }\r\n    }, [location.locationDetails.locationKey])\r\n\r\n    if (!location.forecasts.dailyForecasts || !location.locationDetails.locationName) return 'Loading...'\r\n    return(\r\n        <div className=\"location-info\">\r\n            <div className=\"location-info-header\">\r\n                    <div>\r\n                        {location.locationDetails.locationName}\r\n                        <br/>\r\n                        <span>{location.forecasts.dailyForecasts[0].Temperature.Maximum.Value}°</span>\r\n                    </div>\r\n                    <div>\r\n                        {renderFavoritesButton(location, isFavorited, setIsFavorited)}\r\n                    </div>\r\n            </div>\r\n            <div className=\"location-info-body\">\r\n                {location.forecasts.dailyForecasts[0].Day.IconPhrase}\r\n            </div>\r\n            <div className=\"location-info-footer\">\r\n            {renderForecast(location.forecasts.dailyForecasts)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocationInfo\r\n\r\n","import React, { useState } from 'react'\r\nimport { fetchForecasts, useInitialForecast } from '../helpers'\r\nimport AutoComplete from './AutoComplete'\r\nimport LocationInfo from './LocationInfo'\r\n\r\nconst Home = () => {\r\n    const initialLocation = useInitialForecast()\r\n    const [location, setLocation] = useState({ forecasts: {} })\r\n\r\n    const handleSetSelection = async (selection) => {\r\n        const locationObject = await fetchForecasts(selection)\r\n\r\n        setLocation(locationObject)\r\n    }\r\n    if (!location) return <div className=\"page\">Enter a location to see a forecast!</div>\r\n    return(\r\n        <div className=\"page\">\r\n            <div className=\"search\">\r\n                <AutoComplete handleSetSelection={handleSetSelection}/>\r\n            </div>\r\n\r\n            <div className=\"content\">\r\n                <LocationInfo location={(location.forecasts || {}).dailyForecasts ? location : initialLocation}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <div>\r\n                Alika\r\n            </div>\r\n            <div>\r\n                <Link to=\"/\">\r\n                    Home\r\n                </Link>\r\n                <Link to=\"/favorites\">\r\n                    Favorites\r\n                </Link>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState } from 'react'\r\nimport { renderFavorites } from '../helpers'\r\n\r\nconst Favorites = () => {\r\n    const savedFavorites = JSON.parse(localStorage.getItem('favorites'))\r\n    const [favorites, setFavorites] = useState(savedFavorites)\r\n    if (!favorites || !favorites.length) {\r\n        return <div className=\"page\">You have no favorited locations</div>\r\n    }\r\n    return(\r\n        <div className=\"page\">\r\n            <div className=\"favorites\">\r\n                {renderFavorites(favorites, setFavorites)}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Favorites","import React from 'react'\r\nimport { Router, Route } from 'react-router-dom'\r\nimport history from '../history'\r\nimport Home from './Home'\r\nimport Header from './Header'\r\nimport Favorites from './Favorites'\r\n\r\nconst App = () => {\r\n    return(\r\n        <div>\r\n\r\n            <Router history={history}>\r\n                <Header/>\r\n                <Route path=\"/\" exact component={Home}/>\r\n                <Route path=\"/favorites\" exact component={Favorites}/>\r\n            </Router>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './components/App'\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.querySelector('#root')\r\n)\r\n\r\n"],"sourceRoot":""}